Compiler Command: aoc -v -c ./device/Krnl_GA.cl --report
Compiler Warning: Auto-unrolled loop at /home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt//home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:363
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:289: Compiler Warning: Channel ordering required barrier insertion in landing.sw.bb24 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:179: Compiler Warning: Channel ordering required barrier insertion in do.body26.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:188: Compiler Warning: Channel ordering required barrier insertion in do.body33.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:361: Compiler Warning: Channel ordering required barrier insertion in for.body.i130 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:289: Compiler Warning: Channel ordering required barrier insertion in _ZL21async_work_group_copyPU10AS16776961fPKU10AS16776960fmPU10AS16776961c.exit._ZL21async_work_group_copyPU10AS16776961fPKU10AS16776960fmPU10AS16776961c.exit158_crit_edge of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:362: Compiler Warning: Channel ordering required barrier insertion in for.body.i153 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i50.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:14: Compiler Warning: Channel ordering required barrier insertion in while.body.i18.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i24.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:14: Compiler Warning: Channel ordering required barrier insertion in while.body.i.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:387: Compiler Warning: Channel ordering required barrier insertion in map_angle.exit.i.loopexit.loopexit of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i60 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:14: Compiler Warning: Channel ordering required barrier insertion in while.body.i42 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i48 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:14: Compiler Warning: Channel ordering required barrier insertion in while.body.i30 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i36 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:473: Compiler Warning: Channel ordering required barrier insertion in map_angle.exit37.loopexit of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i24 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:14: Compiler Warning: Channel ordering required barrier insertion in while.body.i6 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i12 of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:14: Compiler Warning: Channel ordering required barrier insertion in while.body.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/auxiliary_genetic.cl:22: Compiler Warning: Channel ordering required barrier insertion in while.body3.i of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:526: Compiler Warning: Channel ordering required barrier insertion in map_angle.exit.loopexit of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:289: Compiler Warning: Channel ordering required barrier insertion in if.end418.loopexit.loopexit of Krnl_GA, but kernel may hang as a result
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:708: Compiler Warning: Channel ordering required barrier insertion in while.cond.UnifiedLatchBlock.switch of Krnl_GA, but kernel may hang as a result
Compiler Warning: Enforcing channel ordering in kernel Krnl_GA limits number of concurrent workgroups to 1
Compiler Warning: Kernels  Krnl_Conform, Krnl_GA, Krnl_InterE, Krnl_IntraE and Krnl_Store may form a cycle due to connectivity of channels  chan_Conf2Intere_active, chan_Conf2Intere_cnt, chan_Conf2Intere_mode, chan_Conf2Intere_x, chan_Conf2Intere_y, chan_Conf2Intere_z, chan_Conf2Intrae_active, chan_Conf2Intrae_cnt, chan_Conf2Intrae_mode, chan_Conf2Intrae_x, chan_Conf2Intrae_y, chan_Conf2Intrae_z, chan_GA2Conf_active, chan_GA2Conf_cnt, chan_GA2Conf_genotype, chan_GA2Conf_mode, chan_Intere2Store_active, chan_Intere2Store_cnt, chan_Intere2Store_intere, chan_Intere2Store_mode, chan_Intrae2Store_active, chan_Intrae2Store_cnt, chan_Intrae2Store_intrae, chan_Intrae2Store_mode, chan_Store2GA_LSenergy and chan_Store2GA_ack. Use mem_fence if you require source code-based ordering of channel operations. Channel depths cannot be optimized
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:708: Compiler Warning: Enforcing channel order on Block2 may cause kernel Krnl_GA to hang due to thread dependent loop exits within the loop nest
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:289: Compiler Warning: Enforcing channel order on Block3 may cause kernel Krnl_GA to hang due to thread dependent loop exits within the loop nest
/home/wimi/lvs/ofdock_altera/ofdock_taskpar_alt/device/Krnl_GA.cl:697: Compiler Warning: Enforcing channel order on Block94 may cause kernel Krnl_GA to hang due to thread dependent loop exits within the loop nest
Warning: Kernel 'Krnl_GA' has unused argument 'KerConst'
=========================================================================================================
                                   *** Optimization Report ***                                        

Kernels that do not use any work-item built-in functions, such as get_global_id(), are compiled for single
work-item execution (a task). Otherwise, a kernel is compiled as an ND-Range.

For tasks, the compiler will attempt to pipeline every loop in the kernel to allow multiple iterations of
the loop to execute concurrently. If some loops are not pipelined, or not pipelined well, you may not get
good performance.

For ND-Range kernels, the loops are not pipelined. Instead, they are built to accept multiple work-items
simultaneously. Kernel throughput is usually reduced by the largest total number of iterations of nested
loops. A large number of threads is usually required to efficiently utilize ND-Range kernels.

=========================================================================================================
Kernel: Krnl_GA                                                                                          
=========================================================================================================
The kernel is compiled as an ND-Range.

The kernel has a required work-group size of (1, 1, 1).

Loop Report:

 + Loop "Block2" (file Krnl_GA.cl line 708)
 | 
 | 
 |-+ Loop "Block3" (file Krnl_GA.cl line 289, line 706)
   | 
   | 
   |-+ Loop "Block78" (file auxiliary_genetic.cl line 14)
   |   
   |   
   |-+ Loop "Block74" (file auxiliary_genetic.cl line 14)
   |   
   |   
   |-+ Loop "Block62" (file auxiliary_genetic.cl line 14)
   |   
   |   
   |-+ Loop "Block58" (file auxiliary_genetic.cl line 14)
   |   
   |   
   |-+ Loop "Block37" (file auxiliary_genetic.cl line 14)
   |   
   |   
   |-+ Loop "Block33" (file auxiliary_genetic.cl line 14)
   |   
   |   
   |-+ Loop "Block81" (file auxiliary_genetic.cl line 22)
   |   
   |   
   |-+ Loop "Block77" (file auxiliary_genetic.cl line 22)
   |   
   |   
   |-+ Loop "Block64" (file auxiliary_genetic.cl line 22)
   |   
   |   
   |-+ Loop "Block61" (file auxiliary_genetic.cl line 22)
   |   
   |   
   |-+ Loop "Block39" (file auxiliary_genetic.cl line 22)
   |   
   |   
   |-+ Loop "Block35" (file auxiliary_genetic.cl line 22)
   |   
   |   
   |-+ Loop "Block13" (file auxiliary_genetic.cl line 47)
   |   
   |   
   |-+ Loop "Block14" (file auxiliary_genetic.cl line 55)
   |   
   |   
   |-+ Loop "Block18" (file auxiliary_genetic.cl line 150)
   |   
   |   
   |-+ Loop "Block20" (file auxiliary_genetic.cl line 179)
   |   
   |   
   |-+ Loop "Block22" (file auxiliary_genetic.cl line 188)
   |   
   |   
   |-+ Loop "Block29" (file auxiliary_genetic.cl line 282)
   |   
   |   
   |-+ Loop "Block30" (file auxiliary_genetic.cl line 299)
   |   
   |   
   |-+ Loop "Block5" (file Krnl_GA.cl line 308)
   |   
   |   
   |-+ Loop "Block6" (file Krnl_GA.cl line 318)
   |   
   |   
   |-+ Loop "Block31" (file auxiliary_genetic.cl line 323)
   |   
   |   
   |-+ Loop "Block16" (file Krnl_GA.cl line 342)
   |   
   |   
   |-+ Loop "Block24" (file Krnl_GA.cl line 361)
   |   
   |   
   |-+ Loop "Block27" (file Krnl_GA.cl line 362)
   |   
   |   
   |-+ Loop "Block47" (file Krnl_GA.cl line 369)
   |   
   |   
   |-+ Loop "Block48" (file Krnl_GA.cl line 378)
   |   
   |   
   |-+ Loop "Block41" (file auxiliary_genetic.cl line 387)
   | | 
   | | 
   | |-+ Loop "Block42" (file auxiliary_genetic.cl line 14)
   | |   
   | |   
   | |-+ Loop "Block44" (file auxiliary_genetic.cl line 22)
   |     
   |     
   |-+ Loop "Block51" (file Krnl_GA.cl line 401)
   |   
   |   
   |-+ Loop "Block53" (file Krnl_GA.cl line 406)
   |   
   |   
   |-+ Loop "Block55" (file Krnl_GA.cl line 417)
   |   
   |   
   |-+ Loop "Block56" (file Krnl_GA.cl line 462)
   |   
   |   
   |-+ Loop "Block66" (file Krnl_GA.cl line 473)
   | | 
   | | 
   | |-+ Loop "Block67" (file auxiliary_genetic.cl line 14)
   | |   
   | |   
   | |-+ Loop "Block69" (file auxiliary_genetic.cl line 22)
   |     
   |     
   |-+ Loop "Block73" (file Krnl_GA.cl line 493)
   |   
   |   
   |-+ Loop "Block82" (file Krnl_GA.cl line 526)
   | | 
   | | 
   | |-+ Loop "Block83" (file auxiliary_genetic.cl line 14)
   | |   
   | |   
   | |-+ Loop "Block85" (file auxiliary_genetic.cl line 22)
   |     
   |     
   |-+ Loop "Block89" (file Krnl_GA.cl line 547)
   |   
   |   
   |-+ Loop "Block90" (file Krnl_GA.cl line 563)
   |   
   |   
   |-+ Loop "Block92" (file Krnl_GA.cl line 615)
   |   
   |   
   |-+ Loop "Block93" (file Krnl_GA.cl line 665)
   |   
   |   
   |-+ Loop "Block94" (file Krnl_GA.cl line 697)
       
       
=========================================================================================================
Kernel: Krnl_Conform                                                                                     
=========================================================================================================
The kernel is compiled for single work-item execution.

The kernel has a required work-group size of (1, 1, 1).

Loop Report:

 + Loop "Block100" (file Krnl_Conform.cl line 47)
 | Pipelined with successive iterations launched every cycle.
 |  
 | The compiler has limited the maximum number of simultaneous iterations of this loop to 16
 | to provide a good trade-off between area and throughput due to local memory accesses which are
 | iteration independent. If you want more fine grained control, please use the
 | #pragma max_concurrency <N> on the loop. A higher value may provide higher throughput
 | while a lower value will provide area benefits.
 |  
 | Iterations executed serially across the regions listed below.
 | Only a single loop iteration will execute inside the listed regions.
 | This will cause performance degradation unless the regions are pipelined well
 | (can process an iteration every cycle).
 |      
 |     Loop "Block103" (file Krnl_Conform.cl line 86)
 |     Loop "Block105" (file Krnl_Conform.cl line 250)
 |     due to:
 |     Memory dependency on Load Operation from: (file Krnl_Conform.cl line 103)
 |       Channel Read Operation (file Krnl_Conform.cl line 53)
 |       Load Operation (file Krnl_Conform.cl line 86, line 250)
 |       Store Operation (file Krnl_Conform.cl line 212)
 |      
 |     Loop "Block103" (file Krnl_Conform.cl line 86)
 |     Loop "Block105" (file Krnl_Conform.cl line 250)
 |     due to:
 |     Memory dependency on Load Operation from: (file Krnl_Conform.cl line 104)
 |       Channel Read Operation (file Krnl_Conform.cl line 53)
 |       Store Operation (file Krnl_Conform.cl line 213)
 |      
 |     Loop "Block103" (file Krnl_Conform.cl line 86)
 |     Loop "Block105" (file Krnl_Conform.cl line 250)
 |     due to:
 |     Memory dependency on Load Operation from: (file Krnl_Conform.cl line 105)
 |       Channel Read Operation (file Krnl_Conform.cl line 53)
 |       Store Operation (file Krnl_Conform.cl line 214)
 |      
 |     Loop "Block103" (file Krnl_Conform.cl line 86)
 |     Loop "Block105" (file Krnl_Conform.cl line 250)
 |     due to:
 |     Memory dependency on Store Operation from: (file Krnl_Conform.cl line 212)
 |       Channel Read Operation (file Krnl_Conform.cl line 53)
 |       Load Operation (file Krnl_Conform.cl line 251)
 |      
 |     Loop "Block103" (file Krnl_Conform.cl line 86)
 |     Loop "Block105" (file Krnl_Conform.cl line 250)
 |     due to:
 |     Memory dependency on Store Operation from: (file Krnl_Conform.cl line 213)
 |       Channel Read Operation (file Krnl_Conform.cl line 53)
 |       Load Operation (file Krnl_Conform.cl line 254)
 |      
 |     Loop "Block103" (file Krnl_Conform.cl line 86)
 |     Loop "Block105" (file Krnl_Conform.cl line 250)
 |     due to:
 |     Memory dependency on Store Operation from: (file Krnl_Conform.cl line 214)
 |       Channel Read Operation (file Krnl_Conform.cl line 53)
 |       Load Operation (file Krnl_Conform.cl line 257)
 | 
 | 
 |-+ Loop "Block101" (file Krnl_Conform.cl line 60)
 |   Pipelined well. Successive iterations are launched every cycle.
 |   
 |   
 |-+ Loop "Block103" (file Krnl_Conform.cl line 86)
 |   Pipelined with successive iterations launched every 45 cycles due to: 
 |        
 |       Memory dependency on Load Operation from: (file Krnl_Conform.cl line 103)
 |         Load Operation (file Krnl_Conform.cl line 86, line 250)
 |       Largest Critical Path Contributors:
 |           16%: Load Operation  (file Krnl_Conform.cl line 103)
 |           11%: Hardened Floating-Point Multiply-Add Operation  (file Krnl_Conform.cl line 195)
 |           11%: Hardened Floating-Point Multiply-Add Operation  (file Krnl_Conform.cl line 195)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 136)
 |            8%: Hardened Floating-Point Multiply Operation  (file Krnl_Conform.cl line 181)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 181)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 181)
 |            8%: Hardened Floating-Point Multiply Operation  (file Krnl_Conform.cl line 195)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 195)
 |        
 |       Memory dependency on Load Operation from: (file Krnl_Conform.cl line 103)
 |         Store Operation (file Krnl_Conform.cl line 212)
 |       Largest Critical Path Contributors:
 |           16%: Load Operation  (file Krnl_Conform.cl line 103)
 |           11%: Hardened Floating-Point Multiply-Add Operation  (file Krnl_Conform.cl line 195)
 |           11%: Hardened Floating-Point Multiply-Add Operation  (file Krnl_Conform.cl line 195)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 136)
 |            8%: Hardened Floating-Point Multiply Operation  (file Krnl_Conform.cl line 181)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 181)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 181)
 |            8%: Hardened Floating-Point Multiply Operation  (file Krnl_Conform.cl line 195)
 |            8%: Hardened Floating-Point Sub Operation  (file Krnl_Conform.cl line 195)
 |    
 |   Additional memory dependencies:
 |        
 |       Memory dependency on Load Operation from: (file Krnl_Conform.cl line 104)
 |         Load Operation (file Krnl_Conform.cl line 86, line 250)
 |         Store Operation (file Krnl_Conform.cl line 213)
 |        
 |       Memory dependency on Load Operation from: (file Krnl_Conform.cl line 105)
 |         Load Operation (file Krnl_Conform.cl line 86, line 250)
 |         Store Operation (file Krnl_Conform.cl line 214)
 |   
 |   
 |-+ Loop "Block105" (file Krnl_Conform.cl line 250)
     Pipelined well. Successive iterations are launched every cycle.
     
     
=========================================================================================================
Kernel: Krnl_InterE                                                                                      
=========================================================================================================
The kernel is compiled for single work-item execution.

The kernel has a required work-group size of (1, 1, 1).

Loop Report:

 + Loop "Block108" (file Krnl_InterE.cl line 58)
 | Pipelined well. Successive iterations are launched every cycle.
 | 
 | 
 |-+ Loop "Block109" (file Krnl_InterE.cl line 70)
 |   Pipelined well. Successive iterations are launched every cycle.
 |   
 |   
 |-+ Loop "Block111" (file Krnl_InterE.cl line 100)
     Pipelined well. Successive iterations are launched every cycle.
     
     
=========================================================================================================
Kernel: Krnl_IntraE                                                                                      
=========================================================================================================
The kernel is compiled for single work-item execution.

The kernel has a required work-group size of (1, 1, 1).

Loop Report:

 + Loop "Block115" (file Krnl_IntraE.cl line 40)
 | Pipelined with successive iterations launched every cycle.
 |  
 | Iterations executed serially across the regions listed below.
 | Only a single loop iteration will execute inside the listed regions.
 | This will cause performance degradation unless the regions are pipelined well
 | (can process an iteration every cycle).
 |      
 |     Loop "Block116" (file Krnl_IntraE.cl line 52)
 |     Loop "Block118" (file Krnl_IntraE.cl line 83)
 |     due to:
 |     Memory dependency on Store Operation from: (file Krnl_IntraE.cl line 53)
 |       Channel Read Operation (file Krnl_IntraE.cl line 45)
 |       Load Operation (file Krnl_IntraE.cl line 52, line 83, line 91, line 122, line 141, line 152)
 |       Load Operation (file Krnl_IntraE.cl line 88)
 |      
 |     Loop "Block116" (file Krnl_IntraE.cl line 52)
 |     Loop "Block118" (file Krnl_IntraE.cl line 83)
 |     due to:
 |     Memory dependency on Store Operation from: (file Krnl_IntraE.cl line 55)
 |       Channel Read Operation (file Krnl_IntraE.cl line 45)
 |       Load Operation (file Krnl_IntraE.cl line 89)
 |      
 |     Loop "Block116" (file Krnl_IntraE.cl line 52)
 |     Loop "Block118" (file Krnl_IntraE.cl line 83)
 |     due to:
 |     Memory dependency on Store Operation from: (file Krnl_IntraE.cl line 57)
 |       Channel Read Operation (file Krnl_IntraE.cl line 45)
 |       Load Operation (file Krnl_IntraE.cl line 90)
 | 
 | 
 |-+ Loop "Block116" (file Krnl_IntraE.cl line 52)
 |   Pipelined well. Successive iterations are launched every cycle.
 |   
 |   
 |-+ Loop "Block118" (file Krnl_IntraE.cl line 83)
     Pipelined well. Successive iterations are launched every cycle.
     
     
=========================================================================================================
Kernel: Krnl_Store                                                                                       
=========================================================================================================
The kernel is compiled for single work-item execution.

The kernel has a required work-group size of (1, 1, 1).

Loop Report:

 + Loop "Block122" (file Krnl_Store.cl line 33)
   Pipelined well. Successive iterations are launched every cycle.
   
   
=========================================================================================================

+--------------------------------------------------------------------+
; Estimated Resource Usage Summary                                   ;
+----------------------------------------+---------------------------+
; Resource                               + Usage                     ;
+----------------------------------------+---------------------------+
; Logic utilization                      ;  253%                     ;
; ALUTs                                  ;  110%                     ;
; Dedicated logic registers              ;  146%                     ;
; Memory blocks                          ;  146%                     ;
; DSP blocks                             ;   27%                     ;
+----------------------------------------+---------------------------;
System name: Krnl_GA

