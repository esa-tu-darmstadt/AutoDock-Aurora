// kernel_system_cra_ring_rom.v

// Generated using ACDS version 16.1 196

`timescale 1 ps / 1 ps
module kernel_system_cra_ring_rom (
		input  wire        clk,               //      clock.clk
		output wire        avm_read,          // cra_master.read
		output wire [4:0]  avm_addr,          //           .address
		input  wire [63:0] avm_readdata,      //           .readdata
		input  wire        avm_readdatavalid, //           .readdatavalid
		input  wire        rst_n,             //      reset.reset_n
		input  wire        ri_read,           //    ring_in.read
		input  wire        ri_write,          //           .write
		input  wire [5:0]  ri_addr,           //           .addr
		input  wire [63:0] ri_data,           //           .data
		input  wire [7:0]  ri_byteena,        //           .byteena
		input  wire        ri_datavalid,      //           .datavalid
		output wire        ro_read,           //   ring_out.read
		output wire        ro_write,          //           .write
		output wire [3:0]  ro_addr,           //           .addr
		output wire [63:0] ro_data,           //           .data
		output wire [7:0]  ro_byteena,        //           .byteena
		output wire        ro_datavalid       //           .datavalid
	);

	cra_ring_rom #(
		.RING_ADDR_W (4),
		.DATA_W      (64),
		.ID_W        (0),
		.ROM_W       (5),
		.ROM_EXT_W   (1)
	) cra_ring_rom (
		.clk               (clk),               //      clock.clk
		.rst_n             (rst_n),             //      reset.reset_n
		.avm_read          (avm_read),          // cra_master.read
		.avm_addr          (avm_addr),          //           .address
		.avm_readdata      (avm_readdata),      //           .readdata
		.avm_readdatavalid (avm_readdatavalid), //           .readdatavalid
		.ri_read           (ri_read),           //    ring_in.read
		.ri_write          (ri_write),          //           .write
		.ri_addr           (ri_addr),           //           .addr
		.ri_data           (ri_data),           //           .data
		.ri_byteena        (ri_byteena),        //           .byteena
		.ri_datavalid      (ri_datavalid),      //           .datavalid
		.ro_read           (ro_read),           //   ring_out.read
		.ro_write          (ro_write),          //           .write
		.ro_addr           (ro_addr),           //           .addr
		.ro_data           (ro_data),           //           .data
		.ro_byteena        (ro_byteena),        //           .byteena
		.ro_datavalid      (ro_datavalid)       //           .datavalid
	);

endmodule
