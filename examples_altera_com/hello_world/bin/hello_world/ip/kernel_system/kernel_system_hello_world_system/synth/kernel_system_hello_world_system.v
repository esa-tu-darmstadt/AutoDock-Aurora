// kernel_system_hello_world_system.v

// Generated using ACDS version 16.1 196

`timescale 1 ps / 1 ps
module kernel_system_hello_world_system (
		output wire [30:0]  avm_memgmem0_DDR_port_0_0_rw_address,       // avm_memgmem0_DDR_port_0_0_rw.address
		output wire         avm_memgmem0_DDR_port_0_0_rw_read,          //                             .read
		output wire         avm_memgmem0_DDR_port_0_0_rw_write,         //                             .write
		output wire [511:0] avm_memgmem0_DDR_port_0_0_rw_writedata,     //                             .writedata
		output wire [63:0]  avm_memgmem0_DDR_port_0_0_rw_byteenable,    //                             .byteenable
		input  wire [511:0] avm_memgmem0_DDR_port_0_0_rw_readdata,      //                             .readdata
		output wire [4:0]   avm_memgmem0_DDR_port_0_0_rw_burstcount,    //                             .burstcount
		input  wire         avm_memgmem0_DDR_port_0_0_rw_waitrequest,   //                             .waitrequest
		input  wire         avm_memgmem0_DDR_port_0_0_rw_readdatavalid, //                             .readdatavalid
		input  wire         avs_hello_world_cra_read,                   //          avs_hello_world_cra.read
		input  wire         avs_hello_world_cra_write,                  //                             .write
		input  wire [3:0]   avs_hello_world_cra_address,                //                             .address
		input  wire [63:0]  avs_hello_world_cra_writedata,              //                             .writedata
		input  wire [7:0]   avs_hello_world_cra_byteenable,             //                             .byteenable
		output wire [63:0]  avs_hello_world_cra_readdata,               //                             .readdata
		output wire         avs_hello_world_cra_readdatavalid,          //                             .readdatavalid
		input  wire         clock,                                      //                  clock_reset.clk
		input  wire         clock2x,                                    //                clock_reset2x.clk
		input  wire         resetn,                                     //            clock_reset_reset.reset_n
		output wire         kernel_irq                                  //                   kernel_irq.irq
	);

	hello_world_system hello_world_system (
		.clock                                      (clock),                                      //                  clock_reset.clk
		.resetn                                     (resetn),                                     //            clock_reset_reset.reset_n
		.clock2x                                    (clock2x),                                    //                clock_reset2x.clk
		.avs_hello_world_cra_read                   (avs_hello_world_cra_read),                   //          avs_hello_world_cra.read
		.avs_hello_world_cra_write                  (avs_hello_world_cra_write),                  //                             .write
		.avs_hello_world_cra_address                (avs_hello_world_cra_address),                //                             .address
		.avs_hello_world_cra_writedata              (avs_hello_world_cra_writedata),              //                             .writedata
		.avs_hello_world_cra_byteenable             (avs_hello_world_cra_byteenable),             //                             .byteenable
		.avs_hello_world_cra_readdata               (avs_hello_world_cra_readdata),               //                             .readdata
		.avs_hello_world_cra_readdatavalid          (avs_hello_world_cra_readdatavalid),          //                             .readdatavalid
		.kernel_irq                                 (kernel_irq),                                 //                   kernel_irq.irq
		.avm_memgmem0_DDR_port_0_0_rw_address       (avm_memgmem0_DDR_port_0_0_rw_address),       // avm_memgmem0_DDR_port_0_0_rw.address
		.avm_memgmem0_DDR_port_0_0_rw_read          (avm_memgmem0_DDR_port_0_0_rw_read),          //                             .read
		.avm_memgmem0_DDR_port_0_0_rw_write         (avm_memgmem0_DDR_port_0_0_rw_write),         //                             .write
		.avm_memgmem0_DDR_port_0_0_rw_writedata     (avm_memgmem0_DDR_port_0_0_rw_writedata),     //                             .writedata
		.avm_memgmem0_DDR_port_0_0_rw_byteenable    (avm_memgmem0_DDR_port_0_0_rw_byteenable),    //                             .byteenable
		.avm_memgmem0_DDR_port_0_0_rw_readdata      (avm_memgmem0_DDR_port_0_0_rw_readdata),      //                             .readdata
		.avm_memgmem0_DDR_port_0_0_rw_burstcount    (avm_memgmem0_DDR_port_0_0_rw_burstcount),    //                             .burstcount
		.avm_memgmem0_DDR_port_0_0_rw_waitrequest   (avm_memgmem0_DDR_port_0_0_rw_waitrequest),   //                             .waitrequest
		.avm_memgmem0_DDR_port_0_0_rw_readdatavalid (avm_memgmem0_DDR_port_0_0_rw_readdatavalid)  //                             .readdatavalid
	);

endmodule
