// kernel_system.v

// Generated using ACDS version 16.1 196

`timescale 1 ps / 1 ps
module kernel_system (
		input  wire [30:0]  cc_snoop_data,             //          cc_snoop.data
		input  wire         cc_snoop_valid,            //                  .valid
		output wire         cc_snoop_ready,            //                  .ready
		input  wire         cc_snoop_clk_clk,          //      cc_snoop_clk.clk
		input  wire         clock_reset_clk,           //       clock_reset.clk
		input  wire         clock_reset2x_clk,         //     clock_reset2x.clk
		input  wire         clock_reset_reset_reset_n, // clock_reset_reset.reset_n
		output wire         kernel_cra_waitrequest,    //        kernel_cra.waitrequest
		output wire [63:0]  kernel_cra_readdata,       //                  .readdata
		output wire         kernel_cra_readdatavalid,  //                  .readdatavalid
		input  wire [0:0]   kernel_cra_burstcount,     //                  .burstcount
		input  wire [63:0]  kernel_cra_writedata,      //                  .writedata
		input  wire [29:0]  kernel_cra_address,        //                  .address
		input  wire         kernel_cra_write,          //                  .write
		input  wire         kernel_cra_read,           //                  .read
		input  wire [7:0]   kernel_cra_byteenable,     //                  .byteenable
		input  wire         kernel_cra_debugaccess,    //                  .debugaccess
		output wire         kernel_irq_irq,            //        kernel_irq.irq
		input  wire         kernel_mem0_waitrequest,   //       kernel_mem0.waitrequest
		input  wire [511:0] kernel_mem0_readdata,      //                  .readdata
		input  wire         kernel_mem0_readdatavalid, //                  .readdatavalid
		output wire [4:0]   kernel_mem0_burstcount,    //                  .burstcount
		output wire [511:0] kernel_mem0_writedata,     //                  .writedata
		output wire [30:0]  kernel_mem0_address,       //                  .address
		output wire         kernel_mem0_write,         //                  .write
		output wire         kernel_mem0_read,          //                  .read
		output wire [63:0]  kernel_mem0_byteenable,    //                  .byteenable
		output wire         kernel_mem0_debugaccess    //                  .debugaccess
	);

	wire   [63:0] avs_hello_world_cra_cra_ring_cra_master_readdata;              // hello_world_system:avs_hello_world_cra_readdata -> avs_hello_world_cra_cra_ring:avm_readdata
	wire          avs_hello_world_cra_cra_ring_cra_master_read;                  // avs_hello_world_cra_cra_ring:avm_read -> hello_world_system:avs_hello_world_cra_read
	wire    [3:0] avs_hello_world_cra_cra_ring_cra_master_address;               // avs_hello_world_cra_cra_ring:avm_addr -> hello_world_system:avs_hello_world_cra_address
	wire    [7:0] avs_hello_world_cra_cra_ring_cra_master_byteenable;            // avs_hello_world_cra_cra_ring:avm_byteena -> hello_world_system:avs_hello_world_cra_byteenable
	wire          avs_hello_world_cra_cra_ring_cra_master_readdatavalid;         // hello_world_system:avs_hello_world_cra_readdatavalid -> avs_hello_world_cra_cra_ring:avm_readdatavalid
	wire          avs_hello_world_cra_cra_ring_cra_master_write;                 // avs_hello_world_cra_cra_ring:avm_write -> hello_world_system:avs_hello_world_cra_write
	wire   [63:0] avs_hello_world_cra_cra_ring_cra_master_writedata;             // avs_hello_world_cra_cra_ring:avm_writedata -> hello_world_system:avs_hello_world_cra_writedata
	wire   [63:0] cra_ring_rom_cra_master_readdata;                              // sys_description_rom:readdata -> cra_ring_rom:avm_readdata
	wire          cra_ring_rom_cra_master_read;                                  // cra_ring_rom:avm_read -> sys_description_rom:read
	wire    [4:0] cra_ring_rom_cra_master_address;                               // cra_ring_rom:avm_addr -> sys_description_rom:address
	wire          cra_ring_rom_cra_master_readdatavalid;                         // sys_description_rom:readdatavalid -> cra_ring_rom:avm_readdatavalid
	wire          clk_1x_out_clk_clk;                                            // clk_1x:out_clk -> [avs_hello_world_cra_cra_ring:clk, cra_ring_rom:clk, cra_root:clk, hello_world_system:clock, irq_mapper:clk, kernel_cra:clk, kernel_irq:clk, kernel_mem0:clk, mm_interconnect_0:clk_1x_out_clk_clk, mm_interconnect_3:clk_1x_out_clk_clk, reset:clk, sys_description_rom:clk]
	wire          clk_2x_out_clk_clk;                                            // clk_2x:out_clk -> hello_world_system:clock2x
	wire          clk_snoop_out_clk_clk;                                         // clk_snoop:out_clk -> [acl_internal_snoop:in_clk_0_clk, rst_controller:clk]
	wire          cra_root_ring_out_datavalid;                                   // cra_root:ro_datavalid -> cra_ring_rom:ri_datavalid
	wire          cra_root_ring_out_read;                                        // cra_root:ro_read -> cra_ring_rom:ri_read
	wire   [63:0] cra_root_ring_out_data;                                        // cra_root:ro_data -> cra_ring_rom:ri_data
	wire    [5:0] cra_root_ring_out_addr;                                        // cra_root:ro_addr -> cra_ring_rom:ri_addr
	wire          cra_root_ring_out_write;                                       // cra_root:ro_write -> cra_ring_rom:ri_write
	wire    [7:0] cra_root_ring_out_byteena;                                     // cra_root:ro_byteena -> cra_ring_rom:ri_byteena
	wire          cra_ring_rom_ring_out_datavalid;                               // cra_ring_rom:ro_datavalid -> avs_hello_world_cra_cra_ring:ri_datavalid
	wire          cra_ring_rom_ring_out_read;                                    // cra_ring_rom:ro_read -> avs_hello_world_cra_cra_ring:ri_read
	wire   [63:0] cra_ring_rom_ring_out_data;                                    // cra_ring_rom:ro_data -> avs_hello_world_cra_cra_ring:ri_data
	wire    [3:0] cra_ring_rom_ring_out_addr;                                    // cra_ring_rom:ro_addr -> avs_hello_world_cra_cra_ring:ri_addr
	wire          cra_ring_rom_ring_out_write;                                   // cra_ring_rom:ro_write -> avs_hello_world_cra_cra_ring:ri_write
	wire    [7:0] cra_ring_rom_ring_out_byteena;                                 // cra_ring_rom:ro_byteena -> avs_hello_world_cra_cra_ring:ri_byteena
	wire          avs_hello_world_cra_cra_ring_ring_out_datavalid;               // avs_hello_world_cra_cra_ring:ro_datavalid -> cra_root:ri_datavalid
	wire          avs_hello_world_cra_cra_ring_ring_out_read;                    // avs_hello_world_cra_cra_ring:ro_read -> cra_root:ri_read
	wire   [63:0] avs_hello_world_cra_cra_ring_ring_out_data;                    // avs_hello_world_cra_cra_ring:ro_data -> cra_root:ri_data
	wire    [3:0] avs_hello_world_cra_cra_ring_ring_out_addr;                    // avs_hello_world_cra_cra_ring:ro_addr -> cra_root:ri_addr
	wire          avs_hello_world_cra_cra_ring_ring_out_write;                   // avs_hello_world_cra_cra_ring:ro_write -> cra_root:ri_write
	wire    [7:0] avs_hello_world_cra_cra_ring_ring_out_byteena;                 // avs_hello_world_cra_cra_ring:ro_byteena -> cra_root:ri_byteena
	wire          reset_out_reset_reset;                                         // reset:out_reset_n -> [avs_hello_world_cra_cra_ring:rst_n, cra_ring_rom:rst_n, cra_root:rst_n, hello_world_system:resetn, irq_mapper:reset, kernel_cra:reset, kernel_irq:reset, kernel_mem0:reset, mm_interconnect_0:hello_world_system_clock_reset_reset_reset_bridge_in_reset_reset, mm_interconnect_3:kernel_cra_reset_reset_bridge_in_reset_reset, rst_controller:reset_in0, sys_description_rom:rst_n]
	wire  [511:0] hello_world_system_avm_memgmem0_ddr_port_0_0_rw_readdata;      // mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_readdata -> hello_world_system:avm_memgmem0_DDR_port_0_0_rw_readdata
	wire          hello_world_system_avm_memgmem0_ddr_port_0_0_rw_waitrequest;   // mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_waitrequest -> hello_world_system:avm_memgmem0_DDR_port_0_0_rw_waitrequest
	wire   [30:0] hello_world_system_avm_memgmem0_ddr_port_0_0_rw_address;       // hello_world_system:avm_memgmem0_DDR_port_0_0_rw_address -> mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_address
	wire          hello_world_system_avm_memgmem0_ddr_port_0_0_rw_read;          // hello_world_system:avm_memgmem0_DDR_port_0_0_rw_read -> mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_read
	wire   [63:0] hello_world_system_avm_memgmem0_ddr_port_0_0_rw_byteenable;    // hello_world_system:avm_memgmem0_DDR_port_0_0_rw_byteenable -> mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_byteenable
	wire          hello_world_system_avm_memgmem0_ddr_port_0_0_rw_readdatavalid; // mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_readdatavalid -> hello_world_system:avm_memgmem0_DDR_port_0_0_rw_readdatavalid
	wire          hello_world_system_avm_memgmem0_ddr_port_0_0_rw_write;         // hello_world_system:avm_memgmem0_DDR_port_0_0_rw_write -> mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_write
	wire  [511:0] hello_world_system_avm_memgmem0_ddr_port_0_0_rw_writedata;     // hello_world_system:avm_memgmem0_DDR_port_0_0_rw_writedata -> mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_writedata
	wire    [4:0] hello_world_system_avm_memgmem0_ddr_port_0_0_rw_burstcount;    // hello_world_system:avm_memgmem0_DDR_port_0_0_rw_burstcount -> mm_interconnect_0:hello_world_system_avm_memgmem0_DDR_port_0_0_rw_burstcount
	wire  [511:0] mm_interconnect_0_kernel_mem0_s0_readdata;                     // kernel_mem0:s0_readdata -> mm_interconnect_0:kernel_mem0_s0_readdata
	wire          mm_interconnect_0_kernel_mem0_s0_waitrequest;                  // kernel_mem0:s0_waitrequest -> mm_interconnect_0:kernel_mem0_s0_waitrequest
	wire          mm_interconnect_0_kernel_mem0_s0_debugaccess;                  // mm_interconnect_0:kernel_mem0_s0_debugaccess -> kernel_mem0:s0_debugaccess
	wire   [30:0] mm_interconnect_0_kernel_mem0_s0_address;                      // mm_interconnect_0:kernel_mem0_s0_address -> kernel_mem0:s0_address
	wire          mm_interconnect_0_kernel_mem0_s0_read;                         // mm_interconnect_0:kernel_mem0_s0_read -> kernel_mem0:s0_read
	wire   [63:0] mm_interconnect_0_kernel_mem0_s0_byteenable;                   // mm_interconnect_0:kernel_mem0_s0_byteenable -> kernel_mem0:s0_byteenable
	wire          mm_interconnect_0_kernel_mem0_s0_readdatavalid;                // kernel_mem0:s0_readdatavalid -> mm_interconnect_0:kernel_mem0_s0_readdatavalid
	wire          mm_interconnect_0_kernel_mem0_s0_write;                        // mm_interconnect_0:kernel_mem0_s0_write -> kernel_mem0:s0_write
	wire  [511:0] mm_interconnect_0_kernel_mem0_s0_writedata;                    // mm_interconnect_0:kernel_mem0_s0_writedata -> kernel_mem0:s0_writedata
	wire    [4:0] mm_interconnect_0_kernel_mem0_s0_burstcount;                   // mm_interconnect_0:kernel_mem0_s0_burstcount -> kernel_mem0:s0_burstcount
	wire          kernel_cra_m0_waitrequest;                                     // mm_interconnect_3:kernel_cra_m0_waitrequest -> kernel_cra:m0_waitrequest
	wire   [63:0] kernel_cra_m0_readdata;                                        // mm_interconnect_3:kernel_cra_m0_readdata -> kernel_cra:m0_readdata
	wire          kernel_cra_m0_debugaccess;                                     // kernel_cra:m0_debugaccess -> mm_interconnect_3:kernel_cra_m0_debugaccess
	wire   [29:0] kernel_cra_m0_address;                                         // kernel_cra:m0_address -> mm_interconnect_3:kernel_cra_m0_address
	wire          kernel_cra_m0_read;                                            // kernel_cra:m0_read -> mm_interconnect_3:kernel_cra_m0_read
	wire    [7:0] kernel_cra_m0_byteenable;                                      // kernel_cra:m0_byteenable -> mm_interconnect_3:kernel_cra_m0_byteenable
	wire          kernel_cra_m0_readdatavalid;                                   // mm_interconnect_3:kernel_cra_m0_readdatavalid -> kernel_cra:m0_readdatavalid
	wire   [63:0] kernel_cra_m0_writedata;                                       // kernel_cra:m0_writedata -> mm_interconnect_3:kernel_cra_m0_writedata
	wire          kernel_cra_m0_write;                                           // kernel_cra:m0_write -> mm_interconnect_3:kernel_cra_m0_write
	wire    [0:0] kernel_cra_m0_burstcount;                                      // kernel_cra:m0_burstcount -> mm_interconnect_3:kernel_cra_m0_burstcount
	wire   [63:0] mm_interconnect_3_cra_root_cra_slave_readdata;                 // cra_root:avs_readdata -> mm_interconnect_3:cra_root_cra_slave_readdata
	wire          mm_interconnect_3_cra_root_cra_slave_waitrequest;              // cra_root:avs_waitrequest -> mm_interconnect_3:cra_root_cra_slave_waitrequest
	wire    [5:0] mm_interconnect_3_cra_root_cra_slave_address;                  // mm_interconnect_3:cra_root_cra_slave_address -> cra_root:avs_addr
	wire          mm_interconnect_3_cra_root_cra_slave_read;                     // mm_interconnect_3:cra_root_cra_slave_read -> cra_root:avs_read
	wire    [7:0] mm_interconnect_3_cra_root_cra_slave_byteenable;               // mm_interconnect_3:cra_root_cra_slave_byteenable -> cra_root:avs_byteena
	wire          mm_interconnect_3_cra_root_cra_slave_readdatavalid;            // cra_root:avs_readdatavalid -> mm_interconnect_3:cra_root_cra_slave_readdatavalid
	wire          mm_interconnect_3_cra_root_cra_slave_write;                    // mm_interconnect_3:cra_root_cra_slave_write -> cra_root:avs_write
	wire   [63:0] mm_interconnect_3_cra_root_cra_slave_writedata;                // mm_interconnect_3:cra_root_cra_slave_writedata -> cra_root:avs_writedata
	wire          irq_mapper_receiver0_irq;                                      // hello_world_system:kernel_irq -> irq_mapper:receiver0_irq
	wire    [0:0] kernel_irq_receiver_irq_irq;                                   // irq_mapper:sender_irq -> kernel_irq:receiver_irq
	wire          rst_controller_reset_out_reset;                                // rst_controller:reset_out -> acl_internal_snoop:in_rst_0_reset

	kernel_system_acl_internal_snoop acl_internal_snoop (
		.in_0_data      (cc_snoop_data),                  //     in_0.data
		.in_0_valid     (cc_snoop_valid),                 //         .valid
		.in_0_ready     (cc_snoop_ready),                 //         .ready
		.in_clk_0_clk   (clk_snoop_out_clk_clk),          // in_clk_0.clk
		.in_rst_0_reset (rst_controller_reset_out_reset), // in_rst_0.reset
		.out_0_data     (),                               //    out_0.data
		.out_0_valid    (),                               //         .valid
		.out_0_ready    ()                                //         .ready
	);

	kernel_system_avs_hello_world_cra_cra_ring avs_hello_world_cra_cra_ring (
		.clk               (clk_1x_out_clk_clk),                                    //      clock.clk
		.avm_read          (avs_hello_world_cra_cra_ring_cra_master_read),          // cra_master.read
		.avm_write         (avs_hello_world_cra_cra_ring_cra_master_write),         //           .write
		.avm_addr          (avs_hello_world_cra_cra_ring_cra_master_address),       //           .address
		.avm_byteena       (avs_hello_world_cra_cra_ring_cra_master_byteenable),    //           .byteenable
		.avm_writedata     (avs_hello_world_cra_cra_ring_cra_master_writedata),     //           .writedata
		.avm_readdata      (avs_hello_world_cra_cra_ring_cra_master_readdata),      //           .readdata
		.avm_readdatavalid (avs_hello_world_cra_cra_ring_cra_master_readdatavalid), //           .readdatavalid
		.rst_n             (reset_out_reset_reset),                                 //      reset.reset_n
		.ri_read           (cra_ring_rom_ring_out_read),                            //    ring_in.read
		.ri_write          (cra_ring_rom_ring_out_write),                           //           .write
		.ri_addr           (cra_ring_rom_ring_out_addr),                            //           .addr
		.ri_data           (cra_ring_rom_ring_out_data),                            //           .data
		.ri_byteena        (cra_ring_rom_ring_out_byteena),                         //           .byteena
		.ri_datavalid      (cra_ring_rom_ring_out_datavalid),                       //           .datavalid
		.ro_read           (avs_hello_world_cra_cra_ring_ring_out_read),            //   ring_out.read
		.ro_write          (avs_hello_world_cra_cra_ring_ring_out_write),           //           .write
		.ro_addr           (avs_hello_world_cra_cra_ring_ring_out_addr),            //           .addr
		.ro_data           (avs_hello_world_cra_cra_ring_ring_out_data),            //           .data
		.ro_byteena        (avs_hello_world_cra_cra_ring_ring_out_byteena),         //           .byteena
		.ro_datavalid      (avs_hello_world_cra_cra_ring_ring_out_datavalid)        //           .datavalid
	);

	kernel_system_clk_1x clk_1x (
		.in_clk  (clock_reset_clk),    //  in_clk.clk
		.out_clk (clk_1x_out_clk_clk)  // out_clk.clk
	);

	kernel_system_clk_2x clk_2x (
		.in_clk  (clock_reset2x_clk),  //  in_clk.clk
		.out_clk (clk_2x_out_clk_clk)  // out_clk.clk
	);

	kernel_system_clk_snoop clk_snoop (
		.in_clk  (cc_snoop_clk_clk),      //  in_clk.clk
		.out_clk (clk_snoop_out_clk_clk)  // out_clk.clk
	);

	kernel_system_cra_ring_rom cra_ring_rom (
		.clk               (clk_1x_out_clk_clk),                    //      clock.clk
		.avm_read          (cra_ring_rom_cra_master_read),          // cra_master.read
		.avm_addr          (cra_ring_rom_cra_master_address),       //           .address
		.avm_readdata      (cra_ring_rom_cra_master_readdata),      //           .readdata
		.avm_readdatavalid (cra_ring_rom_cra_master_readdatavalid), //           .readdatavalid
		.rst_n             (reset_out_reset_reset),                 //      reset.reset_n
		.ri_read           (cra_root_ring_out_read),                //    ring_in.read
		.ri_write          (cra_root_ring_out_write),               //           .write
		.ri_addr           (cra_root_ring_out_addr),                //           .addr
		.ri_data           (cra_root_ring_out_data),                //           .data
		.ri_byteena        (cra_root_ring_out_byteena),             //           .byteena
		.ri_datavalid      (cra_root_ring_out_datavalid),           //           .datavalid
		.ro_read           (cra_ring_rom_ring_out_read),            //   ring_out.read
		.ro_write          (cra_ring_rom_ring_out_write),           //           .write
		.ro_addr           (cra_ring_rom_ring_out_addr),            //           .addr
		.ro_data           (cra_ring_rom_ring_out_data),            //           .data
		.ro_byteena        (cra_ring_rom_ring_out_byteena),         //           .byteena
		.ro_datavalid      (cra_ring_rom_ring_out_datavalid)        //           .datavalid
	);

	kernel_system_cra_root cra_root (
		.clk               (clk_1x_out_clk_clk),                                 //     clock.clk
		.avs_write         (mm_interconnect_3_cra_root_cra_slave_write),         // cra_slave.write
		.avs_addr          (mm_interconnect_3_cra_root_cra_slave_address),       //          .address
		.avs_byteena       (mm_interconnect_3_cra_root_cra_slave_byteenable),    //          .byteenable
		.avs_writedata     (mm_interconnect_3_cra_root_cra_slave_writedata),     //          .writedata
		.avs_readdata      (mm_interconnect_3_cra_root_cra_slave_readdata),      //          .readdata
		.avs_readdatavalid (mm_interconnect_3_cra_root_cra_slave_readdatavalid), //          .readdatavalid
		.avs_waitrequest   (mm_interconnect_3_cra_root_cra_slave_waitrequest),   //          .waitrequest
		.avs_read          (mm_interconnect_3_cra_root_cra_slave_read),          //          .read
		.rst_n             (reset_out_reset_reset),                              //     reset.reset_n
		.ri_write          (avs_hello_world_cra_cra_ring_ring_out_write),        //   ring_in.write
		.ri_addr           (avs_hello_world_cra_cra_ring_ring_out_addr),         //          .addr
		.ri_byteena        (avs_hello_world_cra_cra_ring_ring_out_byteena),      //          .byteena
		.ri_data           (avs_hello_world_cra_cra_ring_ring_out_data),         //          .data
		.ri_read           (avs_hello_world_cra_cra_ring_ring_out_read),         //          .read
		.ri_datavalid      (avs_hello_world_cra_cra_ring_ring_out_datavalid),    //          .datavalid
		.ro_read           (cra_root_ring_out_read),                             //  ring_out.read
		.ro_write          (cra_root_ring_out_write),                            //          .write
		.ro_addr           (cra_root_ring_out_addr),                             //          .addr
		.ro_data           (cra_root_ring_out_data),                             //          .data
		.ro_byteena        (cra_root_ring_out_byteena),                          //          .byteena
		.ro_datavalid      (cra_root_ring_out_datavalid)                         //          .datavalid
	);

	kernel_system_hello_world_system hello_world_system (
		.avm_memgmem0_DDR_port_0_0_rw_address       (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_address),       // avm_memgmem0_DDR_port_0_0_rw.address
		.avm_memgmem0_DDR_port_0_0_rw_read          (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_read),          //                             .read
		.avm_memgmem0_DDR_port_0_0_rw_write         (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_write),         //                             .write
		.avm_memgmem0_DDR_port_0_0_rw_writedata     (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_writedata),     //                             .writedata
		.avm_memgmem0_DDR_port_0_0_rw_byteenable    (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_byteenable),    //                             .byteenable
		.avm_memgmem0_DDR_port_0_0_rw_readdata      (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_readdata),      //                             .readdata
		.avm_memgmem0_DDR_port_0_0_rw_burstcount    (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_burstcount),    //                             .burstcount
		.avm_memgmem0_DDR_port_0_0_rw_waitrequest   (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_waitrequest),   //                             .waitrequest
		.avm_memgmem0_DDR_port_0_0_rw_readdatavalid (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_readdatavalid), //                             .readdatavalid
		.avs_hello_world_cra_read                   (avs_hello_world_cra_cra_ring_cra_master_read),                  //          avs_hello_world_cra.read
		.avs_hello_world_cra_write                  (avs_hello_world_cra_cra_ring_cra_master_write),                 //                             .write
		.avs_hello_world_cra_address                (avs_hello_world_cra_cra_ring_cra_master_address),               //                             .address
		.avs_hello_world_cra_writedata              (avs_hello_world_cra_cra_ring_cra_master_writedata),             //                             .writedata
		.avs_hello_world_cra_byteenable             (avs_hello_world_cra_cra_ring_cra_master_byteenable),            //                             .byteenable
		.avs_hello_world_cra_readdata               (avs_hello_world_cra_cra_ring_cra_master_readdata),              //                             .readdata
		.avs_hello_world_cra_readdatavalid          (avs_hello_world_cra_cra_ring_cra_master_readdatavalid),         //                             .readdatavalid
		.clock                                      (clk_1x_out_clk_clk),                                            //                  clock_reset.clk
		.clock2x                                    (clk_2x_out_clk_clk),                                            //                clock_reset2x.clk
		.resetn                                     (reset_out_reset_reset),                                         //            clock_reset_reset.reset_n
		.kernel_irq                                 (irq_mapper_receiver0_irq)                                       //                   kernel_irq.irq
	);

	kernel_system_kernel_cra kernel_cra (
		.clk              (clk_1x_out_clk_clk),          //   clk.clk
		.m0_waitrequest   (kernel_cra_m0_waitrequest),   //    m0.waitrequest
		.m0_readdata      (kernel_cra_m0_readdata),      //      .readdata
		.m0_readdatavalid (kernel_cra_m0_readdatavalid), //      .readdatavalid
		.m0_burstcount    (kernel_cra_m0_burstcount),    //      .burstcount
		.m0_writedata     (kernel_cra_m0_writedata),     //      .writedata
		.m0_address       (kernel_cra_m0_address),       //      .address
		.m0_write         (kernel_cra_m0_write),         //      .write
		.m0_read          (kernel_cra_m0_read),          //      .read
		.m0_byteenable    (kernel_cra_m0_byteenable),    //      .byteenable
		.m0_debugaccess   (kernel_cra_m0_debugaccess),   //      .debugaccess
		.reset            (~reset_out_reset_reset),      // reset.reset
		.s0_waitrequest   (kernel_cra_waitrequest),      //    s0.waitrequest
		.s0_readdata      (kernel_cra_readdata),         //      .readdata
		.s0_readdatavalid (kernel_cra_readdatavalid),    //      .readdatavalid
		.s0_burstcount    (kernel_cra_burstcount),       //      .burstcount
		.s0_writedata     (kernel_cra_writedata),        //      .writedata
		.s0_address       (kernel_cra_address),          //      .address
		.s0_write         (kernel_cra_write),            //      .write
		.s0_read          (kernel_cra_read),             //      .read
		.s0_byteenable    (kernel_cra_byteenable),       //      .byteenable
		.s0_debugaccess   (kernel_cra_debugaccess)       //      .debugaccess
	);

	kernel_system_kernel_irq kernel_irq (
		.clk          (clk_1x_out_clk_clk),          //          clk.clk
		.reset        (~reset_out_reset_reset),      //    clk_reset.reset
		.receiver_irq (kernel_irq_receiver_irq_irq), // receiver_irq.irq
		.sender0_irq  (kernel_irq_irq)               //  sender0_irq.irq
	);

	kernel_system_kernel_mem0 kernel_mem0 (
		.clk              (clk_1x_out_clk_clk),                             //   clk.clk
		.m0_waitrequest   (kernel_mem0_waitrequest),                        //    m0.waitrequest
		.m0_readdata      (kernel_mem0_readdata),                           //      .readdata
		.m0_readdatavalid (kernel_mem0_readdatavalid),                      //      .readdatavalid
		.m0_burstcount    (kernel_mem0_burstcount),                         //      .burstcount
		.m0_writedata     (kernel_mem0_writedata),                          //      .writedata
		.m0_address       (kernel_mem0_address),                            //      .address
		.m0_write         (kernel_mem0_write),                              //      .write
		.m0_read          (kernel_mem0_read),                               //      .read
		.m0_byteenable    (kernel_mem0_byteenable),                         //      .byteenable
		.m0_debugaccess   (kernel_mem0_debugaccess),                        //      .debugaccess
		.reset            (~reset_out_reset_reset),                         // reset.reset
		.s0_waitrequest   (mm_interconnect_0_kernel_mem0_s0_waitrequest),   //    s0.waitrequest
		.s0_readdata      (mm_interconnect_0_kernel_mem0_s0_readdata),      //      .readdata
		.s0_readdatavalid (mm_interconnect_0_kernel_mem0_s0_readdatavalid), //      .readdatavalid
		.s0_burstcount    (mm_interconnect_0_kernel_mem0_s0_burstcount),    //      .burstcount
		.s0_writedata     (mm_interconnect_0_kernel_mem0_s0_writedata),     //      .writedata
		.s0_address       (mm_interconnect_0_kernel_mem0_s0_address),       //      .address
		.s0_write         (mm_interconnect_0_kernel_mem0_s0_write),         //      .write
		.s0_read          (mm_interconnect_0_kernel_mem0_s0_read),          //      .read
		.s0_byteenable    (mm_interconnect_0_kernel_mem0_s0_byteenable),    //      .byteenable
		.s0_debugaccess   (mm_interconnect_0_kernel_mem0_s0_debugaccess)    //      .debugaccess
	);

	kernel_system_reset reset (
		.clk         (clk_1x_out_clk_clk),        //       clk.clk
		.in_reset_n  (clock_reset_reset_reset_n), //  in_reset.reset_n
		.out_reset_n (reset_out_reset_reset)      // out_reset.reset_n
	);

	kernel_system_sys_description_rom sys_description_rom (
		.clk           (clk_1x_out_clk_clk),                    //   clk0.clk
		.rst_n         (reset_out_reset_reset),                 // reset0.reset_n
		.address       (cra_ring_rom_cra_master_address),       //     s0.address
		.readdata      (cra_ring_rom_cra_master_readdata),      //       .readdata
		.read          (cra_ring_rom_cra_master_read),          //       .read
		.readdatavalid (cra_ring_rom_cra_master_readdatavalid)  //       .readdatavalid
	);

	kernel_system_altera_mm_interconnect_161_x3dvqny mm_interconnect_0 (
		.clk_1x_out_clk_clk                                               (clk_1x_out_clk_clk),                                            //                                             clk_1x_out_clk.clk
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_address          (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_address),       //            hello_world_system_avm_memgmem0_DDR_port_0_0_rw.address
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_waitrequest      (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_waitrequest),   //                                                           .waitrequest
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_burstcount       (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_burstcount),    //                                                           .burstcount
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_byteenable       (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_byteenable),    //                                                           .byteenable
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_read             (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_read),          //                                                           .read
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_readdata         (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_readdata),      //                                                           .readdata
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_readdatavalid    (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_readdatavalid), //                                                           .readdatavalid
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_write            (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_write),         //                                                           .write
		.hello_world_system_avm_memgmem0_DDR_port_0_0_rw_writedata        (hello_world_system_avm_memgmem0_ddr_port_0_0_rw_writedata),     //                                                           .writedata
		.hello_world_system_clock_reset_reset_reset_bridge_in_reset_reset (~reset_out_reset_reset),                                        // hello_world_system_clock_reset_reset_reset_bridge_in_reset.reset
		.kernel_mem0_s0_address                                           (mm_interconnect_0_kernel_mem0_s0_address),                      //                                             kernel_mem0_s0.address
		.kernel_mem0_s0_write                                             (mm_interconnect_0_kernel_mem0_s0_write),                        //                                                           .write
		.kernel_mem0_s0_read                                              (mm_interconnect_0_kernel_mem0_s0_read),                         //                                                           .read
		.kernel_mem0_s0_readdata                                          (mm_interconnect_0_kernel_mem0_s0_readdata),                     //                                                           .readdata
		.kernel_mem0_s0_writedata                                         (mm_interconnect_0_kernel_mem0_s0_writedata),                    //                                                           .writedata
		.kernel_mem0_s0_burstcount                                        (mm_interconnect_0_kernel_mem0_s0_burstcount),                   //                                                           .burstcount
		.kernel_mem0_s0_byteenable                                        (mm_interconnect_0_kernel_mem0_s0_byteenable),                   //                                                           .byteenable
		.kernel_mem0_s0_readdatavalid                                     (mm_interconnect_0_kernel_mem0_s0_readdatavalid),                //                                                           .readdatavalid
		.kernel_mem0_s0_waitrequest                                       (mm_interconnect_0_kernel_mem0_s0_waitrequest),                  //                                                           .waitrequest
		.kernel_mem0_s0_debugaccess                                       (mm_interconnect_0_kernel_mem0_s0_debugaccess)                   //                                                           .debugaccess
	);

	kernel_system_altera_mm_interconnect_161_3mzxooi mm_interconnect_3 (
		.clk_1x_out_clk_clk                           (clk_1x_out_clk_clk),                                 //                         clk_1x_out_clk.clk
		.cra_root_cra_slave_address                   (mm_interconnect_3_cra_root_cra_slave_address),       //                     cra_root_cra_slave.address
		.cra_root_cra_slave_write                     (mm_interconnect_3_cra_root_cra_slave_write),         //                                       .write
		.cra_root_cra_slave_read                      (mm_interconnect_3_cra_root_cra_slave_read),          //                                       .read
		.cra_root_cra_slave_readdata                  (mm_interconnect_3_cra_root_cra_slave_readdata),      //                                       .readdata
		.cra_root_cra_slave_writedata                 (mm_interconnect_3_cra_root_cra_slave_writedata),     //                                       .writedata
		.cra_root_cra_slave_byteenable                (mm_interconnect_3_cra_root_cra_slave_byteenable),    //                                       .byteenable
		.cra_root_cra_slave_readdatavalid             (mm_interconnect_3_cra_root_cra_slave_readdatavalid), //                                       .readdatavalid
		.cra_root_cra_slave_waitrequest               (mm_interconnect_3_cra_root_cra_slave_waitrequest),   //                                       .waitrequest
		.kernel_cra_m0_address                        (kernel_cra_m0_address),                              //                          kernel_cra_m0.address
		.kernel_cra_m0_waitrequest                    (kernel_cra_m0_waitrequest),                          //                                       .waitrequest
		.kernel_cra_m0_burstcount                     (kernel_cra_m0_burstcount),                           //                                       .burstcount
		.kernel_cra_m0_byteenable                     (kernel_cra_m0_byteenable),                           //                                       .byteenable
		.kernel_cra_m0_read                           (kernel_cra_m0_read),                                 //                                       .read
		.kernel_cra_m0_readdata                       (kernel_cra_m0_readdata),                             //                                       .readdata
		.kernel_cra_m0_readdatavalid                  (kernel_cra_m0_readdatavalid),                        //                                       .readdatavalid
		.kernel_cra_m0_write                          (kernel_cra_m0_write),                                //                                       .write
		.kernel_cra_m0_writedata                      (kernel_cra_m0_writedata),                            //                                       .writedata
		.kernel_cra_m0_debugaccess                    (kernel_cra_m0_debugaccess),                          //                                       .debugaccess
		.kernel_cra_reset_reset_bridge_in_reset_reset (~reset_out_reset_reset)                              // kernel_cra_reset_reset_bridge_in_reset.reset
	);

	kernel_system_altera_irq_mapper_161_nifn44i irq_mapper (
		.clk           (clk_1x_out_clk_clk),          //       clk.clk
		.reset         (~reset_out_reset_reset),      // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),    // receiver0.irq
		.sender_irq    (kernel_irq_receiver_irq_irq)  //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_out_reset_reset),         // reset_in0.reset
		.clk            (clk_snoop_out_clk_clk),          //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

endmodule
